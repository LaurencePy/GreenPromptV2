(()=>{"use strict";console.log("%%%% POPUP.JS API MODE - START - v2.5 (Mixtral token & energy tracking with output trimming) %%%%");const t="https://api-inference.huggingface.co/models/mistralai/Mixtral-8x7B-Instruct-v0.1";function e(t){return t?t.trim().split(/\s+|(?=[,.!?:;])/).filter(Boolean):[]}document.addEventListener("DOMContentLoaded",(()=>{console.log("%%%% DOMContentLoaded event fired - API v2.5 %%%%");const n=document.getElementById("prompt-input"),o=document.getElementById("optimize-btn"),r=document.getElementById("status"),i=document.getElementById("optimized-output"),s=document.getElementById("input-tokens"),a=document.getElementById("output-tokens"),l=document.getElementById("energy-usage"),u=document.getElementById("total-token-savings");if(!o)return console.error("Element with ID 'optimize-btn' not found!"),void(r&&(r.textContent="Error: Optimize button not found in HTML."));r&&(r.textContent="Ready. Enter a prompt to optimize."),o.disabled=!1;let c=parseInt(localStorage.getItem("totalTokenSavings")||"0",10);u&&(u.textContent=c),o.addEventListener("click",(async()=>{console.log("%%%% Optimize button clicked - API v2.5 %%%%");const g=n.value;if(g.trim()){r&&(r.textContent="Rewriting prompt via API..."),i&&(i.textContent=""),o.disabled=!0;try{const{rewrittenText:n,inputTokens:o,outputTokens:m,estimatedEnergy:d}=await async function(n){const o=document.getElementById("status"),r=e(n).length,i={inputs:`Rewrite the following prompt to be as short as possible without changing its meaning. Remove all politeness markers and unnecessary words.\nReturn ONLY the rewritten prompt, with NO extra words, explanations, or quotes.\nInput prompt: """${n}"""`,parameters:{max_new_tokens:60,temperature:.1,do_sample:!1,early_stopping:!0}};console.log(`Sending to Hugging Face (${t}):`,JSON.stringify(i,null,2)),o&&(o.textContent="Calling Mixtral model API...");const s=await fetch(t,{method:"POST",headers:{Authorization:"Bearer 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","Content-Type":"application/json"},body:JSON.stringify(i)});if(!s.ok){const t=await s.text();console.error(`Hugging Face API Error (${s.status}): ${s.statusText}`,t);let e="API request failed.";try{const n=JSON.parse(t);n.error?e=n.error:n.detail&&(e=n.detail)}catch(n){e=t.substring(0,200)}throw new Error(`Hugging Face API error (${s.status}). Details: ${e}`)}const a=await s.json();console.log("Hugging Face API Result:",a);let l=a[0]?.generated_text||a[0]?.summary_text;if(l){const t=function(t){if(!t)return"";const e=t.trim().split("\n");let n="";for(let t=e.length-1;t>=0;t--){const o=e[t].trim();if(o){n=o;break}}return n=n.replace(/^.*?:\s*/,""),n=n.replace(/^["']+|["']+$/g,""),n.trim()}(l),n=e(t).length;return{rewrittenText:t,inputTokens:r,outputTokens:n,estimatedEnergy:1*(r+n)+10*(n+50)}}{const t=JSON.stringify(a,null,2).substring(0,300);throw new Error(`No usable summary returned. Got: ${t}...`)}}(g);i&&(i.textContent=n),s&&(s.textContent=o),a&&(a.textContent=m),l&&(l.textContent=d);const p=Math.max(0,o-m);c+=p,localStorage.setItem("totalTokenSavings",c.toString()),u&&(u.textContent=c),r&&(r.textContent="Prompt rewritten successfully!")}catch(t){console.error("Error during API call or processing:",t),i&&(i.textContent=`Error: ${t.message}`),r&&(r.textContent="Failed to rewrite prompt.")}finally{o.disabled=!1}}else r&&(r.textContent="Please enter a prompt.")})),console.log("%%%% Event listener attached to optimize-btn - API v2.5 %%%%")})),console.log("%%%% POPUP.JS SCRIPT BOTTOM - API v2.5 %%%%")})();